{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo User\\\\Desktop\\\\Web Development Projects\\\\2. React Developer Nanodegree\\\\would-you-rather\\\\frontend\\\\src\\\\components\\\\Poll.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\n\nconst Poll = ({\n  authedUser,\n  poll\n}) => {\n  _s();\n\n  let history = useHistory();\n  const {\n    author,\n    firstQuestion,\n    secondQuestion,\n    id,\n    answeredBy\n  } = poll;\n\n  const handleClick = () => {\n    history.push(`questions/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll__head\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll__head-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: author.avatar,\n          className: \"poll__head-left__img shadow-xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll__head-right\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"poll__head-right__name\",\n          children: author.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll__body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"poll__body-title\",\n        children: \"Would you rather...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"poll__body-questions\",\n        children: [firstQuestion, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 60\n        }, this), \"or... \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 71\n        }, this), secondQuestion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        className: \"poll__body-btn\",\n        children: !answeredBy.includes(authedUser.id) ? 'Answer Poll' : 'See Results'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Poll, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Poll;\n\nfunction mapStateToProps({\n  authedUser,\n  polls\n}, {\n  id\n}) {\n  const poll = polls[id];\n  return {\n    authedUser,\n    poll: poll\n  };\n}\n\nexport default connect(mapStateToProps)(Poll);\n\nvar _c;\n\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"sources":["C:/Users/Lenovo User/Desktop/Web Development Projects/2. React Developer Nanodegree/would-you-rather/frontend/src/components/Poll.js"],"names":["React","connect","useHistory","Link","Button","Poll","authedUser","poll","history","author","firstQuestion","secondQuestion","id","answeredBy","handleClick","push","avatar","includes","mapStateToProps","polls"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA0B;AAAA;;AACrC,MAAIC,OAAO,GAAGN,UAAU,EAAxB;AAEA,QAAM;AAAEO,IAAAA,MAAF;AAAUC,IAAAA,aAAV;AAAyBC,IAAAA,cAAzB;AAAyCC,IAAAA,EAAzC;AAA6CC,IAAAA;AAA7C,MAA2DN,IAAjE;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxBN,IAAAA,OAAO,CAACO,IAAR,CAAc,aAAYH,EAAG,EAA7B;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEH,MAAM,CAACO,MAAjB;AAAyB,UAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,wBAAhB;AAAA,oBAA0CP,MAAM,CAACG;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA,mBAAqCF,aAArC,eAAmD;AAAA;AAAA;AAAA;AAAA,gBAAnD,yBAA8D;AAAA;AAAA;AAAA;AAAA,gBAA9D,EAAoEC,cAApE;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEG,WAAjB;AAA8B,QAAA,SAAS,EAAC,gBAAxC;AAAA,kBAA0D,CAACD,UAAU,CAACI,QAAX,CAAoBX,UAAU,CAACM,EAA/B,CAAD,GAAsC,aAAtC,GAAsD;AAAhH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA7BD;;GAAMP,I;UACUH,U;;;KADVG,I;;AA+BN,SAASa,eAAT,CAAyB;AAAEZ,EAAAA,UAAF;AAAca,EAAAA;AAAd,CAAzB,EAAgD;AAAEP,EAAAA;AAAF,CAAhD,EAAwD;AACtD,QAAML,IAAI,GAAGY,KAAK,CAACP,EAAD,CAAlB;AAEA,SAAO;AACLN,IAAAA,UADK;AAELC,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID;;AAED,eAAeN,OAAO,CAACiB,eAAD,CAAP,CAAyBb,IAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nconst Poll = ({ authedUser, poll }) => {\r\n  let history = useHistory();\r\n\r\n  const { author, firstQuestion, secondQuestion, id, answeredBy} = poll\r\n\r\n  const handleClick = () => {\r\n    history.push(`questions/${id}`)\r\n  }\r\n \r\n  return (\r\n    <div className='poll'>\r\n      <div className='poll__head'>\r\n        <div className='poll__head-left'>\r\n          <img src={author.avatar} className='poll__head-left__img shadow-xs'/>\r\n        </div>\r\n        <div className='poll__head-right'>\r\n          <span className='poll__head-right__name'>{author.id}</span>\r\n        </div>\r\n      </div>\r\n      <div className='poll__body'>\r\n        <p className='poll__body-title'>Would you rather...</p>\r\n        <p className='poll__body-questions'>{firstQuestion}<br/>or... <br/>{secondQuestion}\r\n        </p>    \r\n        {/* Show the correct button depending on whether the user has replied to this poll or not*/}\r\n        <Button onClick={handleClick} className='poll__body-btn'>{!answeredBy.includes(authedUser.id) ? 'Answer Poll' : 'See Results'}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, polls }, { id }) {\r\n  const poll = polls[id]\r\n\r\n  return {\r\n    authedUser,\r\n    poll: poll,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Poll)\r\n"]},"metadata":{},"sourceType":"module"}