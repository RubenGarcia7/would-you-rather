{"ast":null,"code":"function formatPoll({\n  firstQuestion,\n  secondQuestion,\n  author\n}) {\n  return {\n    author,\n    id: generateId(),\n    firstQuestion,\n    secondQuestion\n  };\n}\n\nexport function _savePoll({\n  firstQuestion,\n  secondQuestion,\n  author\n}) {\n  return new Promise((res, rej) => {\n    const formattedPoll = formatPoll({\n      author,\n      firstQuestion,\n      secondQuestion\n    });\n    setTimeout(() => {\n      // polls = {\n      //   ...polls,\n      //   [formattedPoll.id]: formattedPoll,\n      // }\n      // users = {\n      //   ...users,\n      //   [author]: {\n      //     ...users[author],\n      //     polls: users[author].polls.concat([formattedPoll.id])\n      //   }\n      // }\n      res(formattedPoll);\n    }, 1000);\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo User/Desktop/Web Development Projects/2. React Developer Nanodegree/would-you-rather/src/utils/_DATA.js"],"names":["formatPoll","firstQuestion","secondQuestion","author","id","generateId","_savePoll","Promise","res","rej","formattedPoll","setTimeout"],"mappings":"AAAA,SAASA,UAAT,CAAqB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,cAAjB;AAAiCC,EAAAA;AAAjC,CAArB,EAAgE;AAC9D,SAAO;AACLA,IAAAA,MADK;AAELC,IAAAA,EAAE,EAAEC,UAAU,EAFT;AAGLJ,IAAAA,aAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;AAED,OAAO,SAASI,SAAT,CAAoB;AAAEL,EAAAA,aAAF;AAAiBC,EAAAA,cAAjB;AAAiCC,EAAAA;AAAjC,CAApB,EAA+D;AACpE,SAAO,IAAII,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/B,UAAMC,aAAa,GAAGV,UAAU,CAAC;AAC/BG,MAAAA,MAD+B;AAE/BF,MAAAA,aAF+B;AAG/BC,MAAAA;AAH+B,KAAD,CAAhC;AAMAS,IAAAA,UAAU,CAAC,MAAM;AACf;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,MAAAA,GAAG,CAACE,aAAD,CAAH;AACD,KAfS,EAeP,IAfO,CAAV;AAgBD,GAvBM,CAAP;AAwBD","sourcesContent":["function formatPoll ({ firstQuestion, secondQuestion, author }) {\r\n  return {\r\n    author,\r\n    id: generateId(),\r\n    firstQuestion,\r\n    secondQuestion\r\n  }\r\n}\r\n\r\nexport function _savePoll ({ firstQuestion, secondQuestion, author }) {\r\n  return new Promise((res, rej) => {\r\n    const formattedPoll = formatPoll({\r\n      author,\r\n      firstQuestion,\r\n      secondQuestion\r\n    })\r\n\r\n    setTimeout(() => {\r\n      // polls = {\r\n      //   ...polls,\r\n      //   [formattedPoll.id]: formattedPoll,\r\n      // }\r\n\r\n      // users = {\r\n      //   ...users,\r\n      //   [author]: {\r\n      //     ...users[author],\r\n      //     polls: users[author].polls.concat([formattedPoll.id])\r\n      //   }\r\n      // }\r\n\r\n      res(formattedPoll)\r\n    }, 1000)\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}