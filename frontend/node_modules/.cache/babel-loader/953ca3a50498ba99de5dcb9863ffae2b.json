{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo User\\\\Desktop\\\\Web Development Projects\\\\2. React Developer Nanodegree\\\\would-you-rather\\\\frontend\\\\src\\\\screens\\\\PollPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../components/Nav';\nimport PollAnswer from '../components/PollAnswer';\n\nconst PollPage = ({\n  id,\n  polls,\n  pollIds,\n  authedUser\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: authedUser !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-poll-panel main-container\",\n        children: pollIds.filter(pollId => pollId === id).map(p => {\n          return /*#__PURE__*/_jsxDEV(PollAnswer, {\n            id: p\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = PollPage;\n\nfunction mapStateToProps({\n  authedUser,\n  polls\n}, props) {\n  const {\n    id\n  } = props.match.params;\n  return {\n    id,\n    authedUser,\n    polls,\n    pollIds: Object.keys(polls)\n  };\n}\n\nexport default connect(mapStateToProps)(PollPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PollPage\");","map":{"version":3,"sources":["C:/Users/Lenovo User/Desktop/Web Development Projects/2. React Developer Nanodegree/would-you-rather/frontend/src/screens/PollPage.js"],"names":["React","connect","Nav","PollAnswer","PollPage","id","polls","pollIds","authedUser","filter","pollId","map","p","mapStateToProps","props","match","params","Object","keys"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAwC;AACvD,sBACE;AAAA,cACCA,UAAU,KAAK,IAAf,gBACD;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,kBACCD,OAAO,CAACE,MAAR,CAAeC,MAAM,IAAIA,MAAM,KAAKL,EAApC,EAAwCM,GAAxC,CAA6CC,CAAD,IAAO;AAChD,8BAAO,QAAC,UAAD;AAAuB,YAAA,EAAE,EAAEA;AAA3B,aAAiBA,CAAC,CAACP,EAAnB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFF;AADD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADC,gBAUC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAXF,mBADF;AAgBD,CAjBD;;KAAMD,Q;;AAmBN,SAASS,eAAT,CAAyB;AAAEL,EAAAA,UAAF;AAAcF,EAAAA;AAAd,CAAzB,EAAgDQ,KAAhD,EAAuD;AACrD,QAAM;AAAET,IAAAA;AAAF,MAASS,KAAK,CAACC,KAAN,CAAYC,MAA3B;AAEA,SAAO;AACLX,IAAAA,EADK;AAELG,IAAAA,UAFK;AAGLF,IAAAA,KAHK;AAILC,IAAAA,OAAO,EAAEU,MAAM,CAACC,IAAP,CAAYZ,KAAZ;AAJJ,GAAP;AAMD;;AAED,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBT,QAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Nav from '../components/Nav'\r\nimport PollAnswer from '../components/PollAnswer' \r\n\r\nconst PollPage = ({ id, polls, pollIds, authedUser }) => {\r\n  return (\r\n    <>\r\n    {authedUser !== null ?\r\n    <>\r\n      <Nav />\r\n      <div className='answer-poll-panel main-container'>\r\n      {pollIds.filter(pollId => pollId === id).map((p) => {\r\n          return <PollAnswer key={p.id} id={p}/>\r\n        })}\r\n      </div>\r\n    </>  \r\n    : \r\n      <ErrorMessage/>\r\n    }  \r\n  </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, polls }, props) {\r\n  const { id } = props.match.params\r\n\r\n  return {\r\n    id,\r\n    authedUser,\r\n    polls,\r\n    pollIds: Object.keys(polls)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollPage)\r\n"]},"metadata":{},"sourceType":"module"}