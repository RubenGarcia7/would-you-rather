{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo User\\\\Desktop\\\\Web Development Projects\\\\2. React Developer Nanodegree\\\\would-you-rather\\\\frontend\\\\src\\\\components\\\\HomePanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport Poll from './Poll';\n\nconst HomePanel = ({\n  polls\n}) => {\n  _s();\n\n  const [activeCategory, setActiveCategory] = useState('unanswered');\n\n  const handleClick = e => {\n    setActiveCategory(e.target.innerText.toLowerCase());\n  };\n\n  const answeredPolls = Object.fromEntries(Object.entries(polls).filter(([key, value]) => value.answeredBy.includes(authedUser)));\n  const unansweredPolls = Object.fromEntries(Object.entries(polls).filter(([key, value]) => !value.answeredBy.includes(authedUser)));\n  const answeredPollIds = Object.keys(answeredPolls);\n  const unansweredPollIds = Object.keys(unansweredPolls);\n  console.log('Answered', answeredPollIds);\n  console.log('Unanswered', unansweredPollIds);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-panel main-container\",\n    children: [/*#__PURE__*/_jsxDEV(Button.Group, {\n      className: \"home-panel__btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        className: `home-panel__btn-group__btn ${activeCategory === 'unanswered' ? 'positive' : ''}`,\n        children: \"Unanswered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        className: `home-panel__btn-group__btn ${activeCategory === 'answered' ? 'positive' : ''}`,\n        children: \"Answered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-panel__list\",\n      children: activeCategory === 'unanswered' ? unansweredPollIds.map(id => {\n        return /*#__PURE__*/_jsxDEV(Poll, {\n          id: id\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }, this);\n      }) : answeredPollIds.map(id => {\n        return /*#__PURE__*/_jsxDEV(Poll, {\n          id: id\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePanel, \"1M4OzrR0NF+a91IhB6ZH/uu2yQM=\");\n\n_c = HomePanel;\n\nfunction mapStateToProps({\n  authedUser,\n  polls\n}) {\n  return {\n    authedUser,\n    polls,\n    pollIds: Object.keys(polls)\n  };\n}\n\nexport default connect(mapStateToProps)(HomePanel);\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePanel\");","map":{"version":3,"sources":["C:/Users/Lenovo User/Desktop/Web Development Projects/2. React Developer Nanodegree/would-you-rather/frontend/src/components/HomePanel.js"],"names":["React","useState","connect","Button","Poll","HomePanel","polls","activeCategory","setActiveCategory","handleClick","e","target","innerText","toLowerCase","answeredPolls","Object","fromEntries","entries","filter","key","value","answeredBy","includes","authedUser","unansweredPolls","answeredPollIds","keys","unansweredPollIds","console","log","map","id","mapStateToProps","pollIds"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'semantic-ui-react'\r\nimport Poll from './Poll'\r\n\r\nconst HomePanel = ({  polls  }) => {  \r\n  const [activeCategory, setActiveCategory] = useState('unanswered')\r\n\r\n  const handleClick = (e) => {\r\n\r\n    setActiveCategory(e.target.innerText.toLowerCase())\r\n  }\r\n\r\n  const answeredPolls = Object.fromEntries(Object.entries(polls).filter(([key, value]) => value.answeredBy.includes(authedUser)))\r\n\r\n  const unansweredPolls = Object.fromEntries(Object.entries(polls).filter(([key, value]) => !value.answeredBy.includes(authedUser)))\r\n\r\n  const answeredPollIds = Object.keys(answeredPolls)\r\n  const unansweredPollIds = Object.keys(unansweredPolls)\r\n\r\n  console.log('Answered', answeredPollIds)\r\n  console.log('Unanswered', unansweredPollIds)\r\n\r\n  return (\r\n    <div className='home-panel main-container'>\r\n      <Button.Group className='home-panel__btn-group'>\r\n        <Button onClick={handleClick}className={`home-panel__btn-group__btn ${activeCategory === 'unanswered' ? 'positive' : ''}`}>Unanswered</Button>\r\n        <Button onClick={handleClick} className={`home-panel__btn-group__btn ${activeCategory === 'answered' ? 'positive' : ''}`}>Answered</Button>\r\n      </Button.Group>\r\n      <div className='home-panel__list'>\r\n        {\r\n          activeCategory === 'unanswered' ? unansweredPollIds.map((id) => {\r\n            return <Poll key={id} id={id}/>\r\n          }) :   \r\n          answeredPollIds.map((id) => {\r\n            return <Poll key={id} id={id}/>\r\n          })      \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps ({ authedUser, polls }) {\r\n  \r\n\r\n  \r\n\r\n  return {\r\n    authedUser,\r\n    polls,\r\n    pollIds: Object.keys(polls),\r\n    \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomePanel)\r\n"]},"metadata":{},"sourceType":"module"}