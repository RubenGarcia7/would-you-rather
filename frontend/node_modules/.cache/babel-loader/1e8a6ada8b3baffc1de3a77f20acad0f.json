{"ast":null,"code":"import { generateId } from '../utils/helpers';\nlet users = {\n  id: 'Mike',\n  avatar: 'https://randomuser.me/api/portraits/men/49.jpg',\n  polls: []\n};\nlet polls = {\n  0: {\n    id: '55675685785678578',\n    author: {\n      id: 'Mike',\n      avatar: 'https://randomuser.me/api/portraits/men/49.jpg'\n    },\n    firstQuestion: 'A powerful lion',\n    secondQuestion: 'A cute dog'\n  }\n};\n\nfunction formatPoll({\n  firstQuestion,\n  secondQuestion,\n  author\n}) {\n  return {\n    author,\n    id: generateId(),\n    firstQuestion,\n    secondQuestion\n  };\n}\n\nexport function _savePoll({\n  firstQuestion,\n  secondQuestion,\n  author\n}) {\n  return new Promise((res, rej) => {\n    const formattedPoll = formatPoll({\n      author,\n      firstQuestion,\n      secondQuestion\n    });\n    setTimeout(() => {\n      // polls = {\n      //   ...polls,\n      //   [formattedPoll.id]: formattedPoll,\n      // }\n      // users = {\n      //   ...users,\n      //   [author]: {\n      //     ...users[author],\n      //     polls: users[author].polls.concat([formattedPoll.id])\n      //   }\n      // }\n      res(formattedPoll);\n    }, 1000);\n  });\n}\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users\n    }), 1000);\n  });\n}\nexport function _getPolls() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...polls\n    }), 1000);\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo User/Desktop/Web Development Projects/2. React Developer Nanodegree/would-you-rather/src/utils/_DATA.js"],"names":["generateId","users","id","avatar","polls","author","firstQuestion","secondQuestion","formatPoll","_savePoll","Promise","res","rej","formattedPoll","setTimeout","_getUsers","_getPolls"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,EAAE,EAAE,MADM;AAEVC,EAAAA,MAAM,EAAE,gDAFE;AAGVC,EAAAA,KAAK,EAAE;AAHG,CAAZ;AAMA,IAAIA,KAAK,GAAG;AACV,KAAG;AACDF,IAAAA,EAAE,EAAE,mBADH;AAEDG,IAAAA,MAAM,EAAE;AACNH,MAAAA,EAAE,EAAE,MADE;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFP;AAMDG,IAAAA,aAAa,EAAE,iBANd;AAODC,IAAAA,cAAc,EAAE;AAPf;AADO,CAAZ;;AAYA,SAASC,UAAT,CAAqB;AAAEF,EAAAA,aAAF;AAAiBC,EAAAA,cAAjB;AAAiCF,EAAAA;AAAjC,CAArB,EAAgE;AAC9D,SAAO;AACLA,IAAAA,MADK;AAELH,IAAAA,EAAE,EAAEF,UAAU,EAFT;AAGLM,IAAAA,aAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;AAED,OAAO,SAASE,SAAT,CAAoB;AAAEH,EAAAA,aAAF;AAAiBC,EAAAA,cAAjB;AAAiCF,EAAAA;AAAjC,CAApB,EAA+D;AACpE,SAAO,IAAIK,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/B,UAAMC,aAAa,GAAGL,UAAU,CAAC;AAC/BH,MAAAA,MAD+B;AAE/BC,MAAAA,aAF+B;AAG/BC,MAAAA;AAH+B,KAAD,CAAhC;AAMAO,IAAAA,UAAU,CAAC,MAAM;AACf;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,MAAAA,GAAG,CAACE,aAAD,CAAH;AACD,KAfS,EAeP,IAfO,CAAV;AAgBD,GAvBM,CAAP;AAwBD;AAED,OAAO,SAASE,SAAT,GAAsB;AAC3B,SAAO,IAAIL,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/BE,IAAAA,UAAU,CAAC,MAAMH,GAAG,CAAC,EAAC,GAAGV;AAAJ,KAAD,CAAV,EAAwB,IAAxB,CAAV;AACD,GAFM,CAAP;AAGD;AAED,OAAO,SAASe,SAAT,GAAsB;AAC3B,SAAO,IAAIN,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/BE,IAAAA,UAAU,CAAC,MAAMH,GAAG,CAAC,EAAC,GAAGP;AAAJ,KAAD,CAAV,EAAwB,IAAxB,CAAV;AACD,GAFM,CAAP;AAGD","sourcesContent":["import { generateId } from '../utils/helpers'\r\n\r\nlet users = {\r\n  id: 'Mike',\r\n  avatar: 'https://randomuser.me/api/portraits/men/49.jpg',\r\n  polls: []\r\n}\r\n\r\nlet polls = {\r\n  0: {\r\n    id: '55675685785678578',\r\n    author: {\r\n      id: 'Mike',\r\n      avatar: 'https://randomuser.me/api/portraits/men/49.jpg'    \r\n    },\r\n    firstQuestion: 'A powerful lion',\r\n    secondQuestion: 'A cute dog'\r\n  }\r\n}\r\n\r\nfunction formatPoll ({ firstQuestion, secondQuestion, author }) {\r\n  return {\r\n    author,\r\n    id: generateId(),\r\n    firstQuestion,\r\n    secondQuestion\r\n  }\r\n}\r\n\r\nexport function _savePoll ({ firstQuestion, secondQuestion, author }) {\r\n  return new Promise((res, rej) => {\r\n    const formattedPoll = formatPoll({\r\n      author,\r\n      firstQuestion,\r\n      secondQuestion\r\n    })\r\n\r\n    setTimeout(() => {\r\n      // polls = {\r\n      //   ...polls,\r\n      //   [formattedPoll.id]: formattedPoll,\r\n      // }\r\n\r\n      // users = {\r\n      //   ...users,\r\n      //   [author]: {\r\n      //     ...users[author],\r\n      //     polls: users[author].polls.concat([formattedPoll.id])\r\n      //   }\r\n      // }\r\n\r\n      res(formattedPoll)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _getUsers () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000)\r\n  })\r\n}\r\n\r\nexport function _getPolls () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...polls}), 1000)\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}