{"ast":null,"code":"import { generateId } from '../utils/helpers';\nimport axios from 'axios';\nexport let users = {\n  'Mike': {\n    id: 'Mike',\n    avatar: 'https://randomuser.me/api/portraits/men/49.jpg',\n    createdPolls: ['98c1e68-3320-4157-18w7-84c2d1e7zxf1v'],\n    answeredPolls: [],\n    points: 1\n  },\n  'Carol': {\n    id: 'Carol',\n    avatar: 'https://randomuser.me/api/portraits/women/2.jpg',\n    createdPolls: [],\n    answeredPolls: [],\n    points: 0\n  },\n  'Jennifer': {\n    id: 'Jennifer',\n    avatar: 'https://randomuser.me/api/portraits/women/3.jpg',\n    createdPolls: [],\n    answeredPolls: ['17w1v628-192q-1537-12x4-11a131j3tb6p'],\n    points: 1\n  },\n  'Victor': {\n    id: 'Victor',\n    avatar: 'https://randomuser.me/api/portraits/men/16.jpg',\n    createdPolls: [],\n    answeredPolls: [],\n    points: 0\n  }\n};\nlet polls = {\n  '98c1e68-3320-4157-18w7-84c2d1e7zxf1v': {\n    id: '98c1e68-3320-4157-18w7-84c2d1e7zxf1v',\n    author: {\n      id: 'Mike',\n      avatar: 'https://randomuser.me/api/portraits/men/49.jpg'\n    },\n    firstQuestion: 'A powerful lion',\n    secondQuestion: 'A cute dog',\n    isAnswered: false,\n    firstQuestionReplies: 0,\n    secondQuestionReplies: 1,\n    totalReplies: 1\n  },\n  '17w1v628-192q-1537-12x4-11a131j3tb6p': {\n    id: '17w1v628-192q-1537-12x4-11a131j3tb6p',\n    author: {\n      id: 'Jennifer',\n      avatar: 'https://randomuser.me/api/portraits/women/3.jpg'\n    },\n    firstQuestion: 'A big tiger',\n    secondQuestion: 'A lazy cat',\n    isAnswered: true,\n    firstQuestionReplies: 1,\n    secondQuestionReplies: 0,\n    totalReplies: 1\n  }\n};\n\nfunction formatPoll({\n  firstQuestion,\n  secondQuestion,\n  author\n}) {\n  return {\n    author,\n    id: generateId(),\n    firstQuestion,\n    secondQuestion,\n    isAnswered: false,\n    firstQuestionReplies: 0,\n    secondQuestionReplies: 0,\n    totalReplies: 0\n  };\n}\n\nexport function _savePoll({\n  firstQuestion,\n  secondQuestion,\n  author\n}) {\n  return new Promise((res, rej) => {\n    const formattedPoll = formatPoll({\n      author,\n      firstQuestion,\n      secondQuestion\n    });\n    setTimeout(() => {\n      // polls = {\n      //   ...polls,\n      //   [formattedPoll.id]: formattedPoll,\n      // }\n      // users = {\n      //   ...users,\n      //   [author]: {\n      //     ...users[author],\n      //     polls: users[author].polls.concat([formattedPoll.id])\n      //   }\n      // }\n      res(formattedPoll);\n    }, 1000);\n  });\n} // const headers = {\n//   'Accept': 'application/json'\n// }\n\nexport const _getUsers = () => {\n  axios.get('http://localhost:5000/api/polls');\n  fetch('http://localhost:5000/api/polls', {\n    headers\n  }).then(res => res.json()).then(data => data); // return new Promise((res, rej) => {\n  //   setTimeout(() => res({...users}), 1000)\n  // })\n};\nexport const _getPolls = () => {\n  fetch('http://localhost:5000/api/users', {\n    headers\n  }).then(res => res.json()).then(data => data); // return new Promise((res, rej) => {\n  //   setTimeout(() => res({...polls}), 1000)\n  // })\n};","map":{"version":3,"sources":["C:/Users/Lenovo User/Desktop/Web Development Projects/2. React Developer Nanodegree/would-you-rather/frontend/src/utils/_DATA.js"],"names":["generateId","axios","users","id","avatar","createdPolls","answeredPolls","points","polls","author","firstQuestion","secondQuestion","isAnswered","firstQuestionReplies","secondQuestionReplies","totalReplies","formatPoll","_savePoll","Promise","res","rej","formattedPoll","setTimeout","_getUsers","get","fetch","headers","then","json","data","_getPolls"],"mappings":"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","sourcesContent":["import { generateId } from '../utils/helpers'\r\nimport axios from 'axios'\r\n\r\nexport let users = {\r\n  'Mike': {\r\n    id: 'Mike',\r\n    avatar: 'https://randomuser.me/api/portraits/men/49.jpg',\r\n    createdPolls: ['98c1e68-3320-4157-18w7-84c2d1e7zxf1v'],\r\n    answeredPolls: [],\r\n    points: 1\r\n  },\r\n  'Carol': {\r\n    id: 'Carol',\r\n    avatar: 'https://randomuser.me/api/portraits/women/2.jpg',\r\n    createdPolls: [],\r\n    answeredPolls: [],\r\n    points: 0\r\n  },\r\n  'Jennifer': {\r\n    id: 'Jennifer',\r\n    avatar: 'https://randomuser.me/api/portraits/women/3.jpg',\r\n    createdPolls: [],\r\n    answeredPolls: ['17w1v628-192q-1537-12x4-11a131j3tb6p'],\r\n    points: 1\r\n  },\r\n  'Victor': {\r\n    id: 'Victor',\r\n    avatar: 'https://randomuser.me/api/portraits/men/16.jpg',\r\n    createdPolls: [],\r\n    answeredPolls: [],\r\n    points: 0\r\n  }\r\n}\r\n\r\nlet polls = {\r\n  '98c1e68-3320-4157-18w7-84c2d1e7zxf1v': {\r\n    id: '98c1e68-3320-4157-18w7-84c2d1e7zxf1v',\r\n    author: {\r\n      id: 'Mike',\r\n      avatar: 'https://randomuser.me/api/portraits/men/49.jpg'    \r\n    },\r\n    firstQuestion: 'A powerful lion',\r\n    secondQuestion: 'A cute dog',\r\n    isAnswered: false,\r\n    firstQuestionReplies: 0,\r\n    secondQuestionReplies: 1,\r\n    totalReplies: 1\r\n  },\r\n  '17w1v628-192q-1537-12x4-11a131j3tb6p': {\r\n    id: '17w1v628-192q-1537-12x4-11a131j3tb6p',\r\n    author: {\r\n      id: 'Jennifer',\r\n      avatar: 'https://randomuser.me/api/portraits/women/3.jpg'    \r\n    },\r\n    firstQuestion: 'A big tiger',\r\n    secondQuestion: 'A lazy cat',\r\n    isAnswered: true,\r\n    firstQuestionReplies: 1,\r\n    secondQuestionReplies: 0,\r\n    totalReplies: 1\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction formatPoll ({ firstQuestion, secondQuestion, author }) {\r\n  return {\r\n    author,\r\n    id: generateId(),\r\n    firstQuestion,\r\n    secondQuestion,\r\n    isAnswered: false,\r\n    firstQuestionReplies: 0,\r\n    secondQuestionReplies: 0,\r\n    totalReplies: 0\r\n  }\r\n}\r\n\r\nexport function _savePoll ({ firstQuestion, secondQuestion, author }) {\r\n  return new Promise((res, rej) => {\r\n    const formattedPoll = formatPoll({\r\n      author,\r\n      firstQuestion,\r\n      secondQuestion\r\n    })\r\n\r\n    setTimeout(() => {\r\n      // polls = {\r\n      //   ...polls,\r\n      //   [formattedPoll.id]: formattedPoll,\r\n      // }\r\n\r\n      // users = {\r\n      //   ...users,\r\n      //   [author]: {\r\n      //     ...users[author],\r\n      //     polls: users[author].polls.concat([formattedPoll.id])\r\n      //   }\r\n      // }\r\n\r\n      res(formattedPoll)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\n// const headers = {\r\n//   'Accept': 'application/json'\r\n// }\r\n\r\nexport const _getUsers = () => {\r\n  axios.get('http://localhost:5000/api/polls')\r\n  fetch('http://localhost:5000/api/polls', { headers })\r\n  .then(res => res.json())\r\n  .then(data => data)\r\n  \r\n  // return new Promise((res, rej) => {\r\n  //   setTimeout(() => res({...users}), 1000)\r\n  // })\r\n}\r\n\r\nexport const _getPolls = () => {\r\n  fetch('http://localhost:5000/api/users', { headers })\r\n  .then(res => res.json())\r\n  .then(data => data)\r\n  // return new Promise((res, rej) => {\r\n  //   setTimeout(() => res({...polls}), 1000)\r\n  // })\r\n}"]},"metadata":{},"sourceType":"module"}