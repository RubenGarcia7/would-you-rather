{"ast":null,"code":"import { savePoll } from '../utils/api';\nimport { addNewPollToUser, addAnsweredPollToUser } from '../actions/users';\nexport const RECEIVE_POLLS = 'RECEIVE_POLLS';\nexport const ADD_POLL = 'ADD_POLL';\nexport const ANSWER_POLL = 'ANSWER_POLL';\nexport function receivePolls(polls) {\n  return {\n    type: RECEIVE_POLLS,\n    payload: {\n      polls\n    }\n  };\n}\n\nfunction addPoll(poll) {\n  return {\n    type: ADD_POLL,\n    payload: {\n      poll\n    }\n  };\n}\n\nfunction answerPoll(id, option) {\n  return {\n    type: ANSWER_POLL,\n    payload: {\n      id,\n      option\n    }\n  };\n}\n\nexport function handleAddPoll(firstQuestion, secondQuestion) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    return savePoll({\n      author: authedUser,\n      firstQuestion,\n      secondQuestion\n    }).then(poll => {\n      dispatch(addPoll(poll));\n      dispatch(addNewPollToUser(poll.author, poll.id));\n      dispatch;\n    });\n  };\n}\nexport function handleAnswerPoll(id, option) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    dispatch(answerPoll(id, option));\n    dispatch(addAnsweredPollToUser(authedUser, id));\n  };\n}\n\nconst savePolls = () => async (dispatch, getState) => {\n  const polls = getState().polls;\n  await axios.post('http://localhost:5000/api/polls', formattedPoll).then(res => {\n    console.log(res);\n  });\n};","map":{"version":3,"sources":["C:/Users/Lenovo User/Desktop/Web Development Projects/2. React Developer Nanodegree/would-you-rather/frontend/src/actions/polls.js"],"names":["savePoll","addNewPollToUser","addAnsweredPollToUser","RECEIVE_POLLS","ADD_POLL","ANSWER_POLL","receivePolls","polls","type","payload","addPoll","poll","answerPoll","id","option","handleAddPoll","firstQuestion","secondQuestion","dispatch","getState","authedUser","author","then","handleAnswerPoll","savePolls","axios","post","formattedPoll","res","console","log"],"mappings":"AACA,SAASA,QAAT,QAAyB,cAAzB;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,QAAwD,kBAAxD;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEL,aADD;AAELM,IAAAA,OAAO,EAAE;AACPF,MAAAA;AADO;AAFJ,GAAP;AAMD;;AAED,SAASG,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,SAAO;AACLH,IAAAA,IAAI,EAAGJ,QADF;AAELK,IAAAA,OAAO,EAAE;AACPE,MAAAA;AADO;AAFJ,GAAP;AAMD;;AAGD,SAASC,UAAT,CAAoBC,EAApB,EAAwBC,MAAxB,EAAgC;AAC9B,SAAO;AACLN,IAAAA,IAAI,EAAEH,WADD;AAELI,IAAAA,OAAO,EAAE;AACPI,MAAAA,EADO;AAEPC,MAAAA;AAFO;AAFJ,GAAP;AAOD;;AAGD,OAAO,SAASC,aAAT,CAAuBC,aAAvB,EAAsCC,cAAtC,EAAsD;AAC3D,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAiBD,QAAQ,EAA/B;AAEA,WAAOnB,QAAQ,CAAC;AACdqB,MAAAA,MAAM,EAAED,UADM;AAEdJ,MAAAA,aAFc;AAGdC,MAAAA;AAHc,KAAD,CAAR,CAKNK,IALM,CAKAX,IAAD,IAAU;AACdO,MAAAA,QAAQ,CAACR,OAAO,CAACC,IAAD,CAAR,CAAR;AACAO,MAAAA,QAAQ,CAACjB,gBAAgB,CAACU,IAAI,CAACU,MAAN,EAAcV,IAAI,CAACE,EAAnB,CAAjB,CAAR;AACAK,MAAAA,QAAQ;AACT,KATM,CAAP;AAUD,GAbD;AAcD;AAED,OAAO,SAASK,gBAAT,CAA0BV,EAA1B,EAA8BC,MAA9B,EAAsC;AAC3C,SAAO,CAACI,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAiBD,QAAQ,EAA/B;AAEAD,IAAAA,QAAQ,CAACN,UAAU,CAACC,EAAD,EAAKC,MAAL,CAAX,CAAR;AACAI,IAAAA,QAAQ,CAAChB,qBAAqB,CAACkB,UAAD,EAAaP,EAAb,CAAtB,CAAR;AACD,GALD;AAMD;;AAED,MAAMW,SAAS,GAAG,MAAM,OAAON,QAAP,EAAiBC,QAAjB,KAA8B;AACpD,QAAMZ,KAAK,GAAGY,QAAQ,GAAGZ,KAAzB;AAEA,QAAMkB,KAAK,CAACC,IAAN,CAAW,iCAAX,EAA8CC,aAA9C,EACDL,IADC,CACKM,GAAD,IAAS;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAHC,CAAN;AAID,CAPD","sourcesContent":["\r\nimport { savePoll } from '../utils/api'\r\nimport { addNewPollToUser, addAnsweredPollToUser } from '../actions/users'\r\n\r\nexport const RECEIVE_POLLS = 'RECEIVE_POLLS'\r\nexport const ADD_POLL = 'ADD_POLL'\r\nexport const ANSWER_POLL = 'ANSWER_POLL'\r\n\r\nexport function receivePolls(polls) {\r\n  return {\r\n    type: RECEIVE_POLLS,\r\n    payload: {\r\n      polls\r\n    }\r\n  }\r\n}\r\n\r\nfunction addPoll(poll) {\r\n  return {\r\n    type:  ADD_POLL,\r\n    payload: {\r\n      poll\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction answerPoll(id, option) {\r\n  return {\r\n    type: ANSWER_POLL,\r\n    payload: {\r\n      id,\r\n      option\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function handleAddPoll(firstQuestion, secondQuestion) {\r\n  return (dispatch, getState) => {\r\n    const { authedUser } = getState()\r\n\r\n    return savePoll({\r\n      author: authedUser,\r\n      firstQuestion,\r\n      secondQuestion\r\n    })\r\n    .then((poll) => {\r\n      dispatch(addPoll(poll))\r\n      dispatch(addNewPollToUser(poll.author, poll.id))\r\n      dispatch\r\n    })\r\n  }\r\n}\r\n\r\nexport function handleAnswerPoll(id, option) {\r\n  return (dispatch, getState) => {\r\n    const { authedUser } = getState()\r\n\r\n    dispatch(answerPoll(id, option))\r\n    dispatch(addAnsweredPollToUser(authedUser, id))\r\n  }\r\n}\r\n\r\nconst savePolls = () => async (dispatch, getState) => {\r\n  const polls = getState().polls\r\n\r\n  await axios.post('http://localhost:5000/api/polls', formattedPoll)\r\n      .then((res) => {\r\n        console.log(res)\r\n      })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}