{"ast":null,"code":"import { generateId } from '../utils/helpers';\nexport const ADD_POLL = 'ADD_POLL';\n\nfunction addPoll(poll) {\n  return {\n    type: ADD_POLL,\n    payload: {\n      poll\n    }\n  };\n} // Working on this!\n\n\nexport function handleAddPoll(firstQuestion, secondQuestion) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    return savePoll({\n      id: generateId(),\n      author: authedUser,\n      firstQuestion,\n      secondQuestion\n    });\n  };\n}\nexport function savePoll(info) {\n  return _savePoll(info);\n}\nexport function _savePoll({\n  firstQues,\n  author,\n  replyingTo\n}) {\n  return new Promise((res, rej) => {\n    const formattedTweet = formatTweet({\n      text,\n      author,\n      replyingTo\n    });\n    setTimeout(() => {\n      tweets = { ...tweets,\n        [formattedTweet.id]: formattedTweet\n      };\n      users = { ...users,\n        [author]: { ...users[author],\n          tweets: users[author].tweets.concat([formattedTweet.id])\n        }\n      };\n      res(formattedTweet);\n    }, 1000);\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo User/Desktop/Web Development Projects/2. React Developer Nanodegree/would-you-rather/src/actions/polls.js"],"names":["generateId","ADD_POLL","addPoll","poll","type","payload","handleAddPoll","firstQuestion","secondQuestion","dispatch","getState","authedUser","savePoll","id","author","info","_savePoll","firstQues","replyingTo","Promise","res","rej","formattedTweet","formatTweet","text","setTimeout","tweets","users","concat"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;;AAEP,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,SAAO;AACLC,IAAAA,IAAI,EAAGH,QADF;AAELI,IAAAA,OAAO,EAAE;AACPF,MAAAA;AADO;AAFJ,GAAP;AAMD,C,CAGD;;;AACA,OAAO,SAASG,aAAT,CAAuBC,aAAvB,EAAsCC,cAAtC,EAAsD;AAC3D,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAiBD,QAAQ,EAA/B;AAEA,WAAOE,QAAQ,CAAC;AACdC,MAAAA,EAAE,EAAEb,UAAU,EADA;AAEdc,MAAAA,MAAM,EAAEH,UAFM;AAGdJ,MAAAA,aAHc;AAIdC,MAAAA;AAJc,KAAD,CAAf;AAMD,GATD;AAUD;AAED,OAAO,SAASI,QAAT,CAAmBG,IAAnB,EAAyB;AAC9B,SAAOC,SAAS,CAACD,IAAD,CAAhB;AACD;AAED,OAAO,SAASC,SAAT,CAAoB;AAAEC,EAAAA,SAAF;AAAaH,EAAAA,MAAb;AAAqBI,EAAAA;AAArB,CAApB,EAAuD;AAC5D,SAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/B,UAAMC,cAAc,GAAGC,WAAW,CAAC;AACjCC,MAAAA,IADiC;AAEjCV,MAAAA,MAFiC;AAGjCI,MAAAA;AAHiC,KAAD,CAAlC;AAMAO,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,MAAM,GAAG,EACP,GAAGA,MADI;AAEP,SAACJ,cAAc,CAACT,EAAhB,GAAqBS;AAFd,OAAT;AAKAK,MAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAEN,SAACb,MAAD,GAAU,EACR,GAAGa,KAAK,CAACb,MAAD,CADA;AAERY,UAAAA,MAAM,EAAEC,KAAK,CAACb,MAAD,CAAL,CAAcY,MAAd,CAAqBE,MAArB,CAA4B,CAACN,cAAc,CAACT,EAAhB,CAA5B;AAFA;AAFJ,OAAR;AAQAO,MAAAA,GAAG,CAACE,cAAD,CAAH;AACD,KAfS,EAeP,IAfO,CAAV;AAgBD,GAvBM,CAAP;AAwBD","sourcesContent":["import { generateId } from '../utils/helpers'\r\nexport const ADD_POLL = 'ADD_POLL'\r\n\r\nfunction addPoll(poll) {\r\n  return {\r\n    type:  ADD_POLL,\r\n    payload: {\r\n      poll\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Working on this!\r\nexport function handleAddPoll(firstQuestion, secondQuestion) {\r\n  return (dispatch, getState) => {\r\n    const { authedUser } = getState()\r\n\r\n    return savePoll({\r\n      id: generateId(),\r\n      author: authedUser,\r\n      firstQuestion,\r\n      secondQuestion    \r\n    })\r\n  }\r\n}\r\n\r\nexport function savePoll (info) {\r\n  return _savePoll(info)\r\n}\r\n\r\nexport function _savePoll ({ firstQues, author, replyingTo }) {\r\n  return new Promise((res, rej) => {\r\n    const formattedTweet = formatTweet({\r\n      text,\r\n      author,\r\n      replyingTo\r\n    })\r\n\r\n    setTimeout(() => {\r\n      tweets = {\r\n        ...tweets,\r\n        [formattedTweet.id]: formattedTweet,\r\n      }\r\n\r\n      users = {\r\n        ...users,\r\n        [author]: {\r\n          ...users[author],\r\n          tweets: users[author].tweets.concat([formattedTweet.id])\r\n        }\r\n      }\r\n\r\n      res(formattedTweet)\r\n    }, 1000)\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}