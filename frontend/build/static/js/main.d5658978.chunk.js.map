{"version":3,"sources":["actions/authedUser.js","utils/_DATA.js","utils/helpers.js","utils/api.js","actions/users.js","actions/polls.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/polls.js","middleware/logger.js","middleware/index.js","components/LoginForm.js","screens/Login.js","components/Nav.js","components/Poll.js","components/HomePanel.js","components/ErrorMessage.js","screens/Home.js","components/PollForm.js","screens/NewPoll.js","components/LeadCard.js","screens/Leaderboard.js","components/PollAnswer.js","screens/PollPage.js","actions/shared.js","components/App.js","index.js"],"names":["SET_AUTHED_USER","REMOVE_AUTHED_USER","users","id","avatar","createdPolls","answeredPolls","points","formatPoll","firstQuestion","secondQuestion","author","uuidv4","answeredBy","firstQuestionReplies","secondQuestionReplies","totalReplies","a","Promise","res","rej","_getUsers","axios","get","data","console","log","_getPolls","savePoll","info","_savePoll","RECEIVE_USERS","ADD_NEW_POLL_TO_USER","ADD_ANSWERED_POLL_TO_USER","RECEIVE_POLLS","ADD_POLL","ANSWER_POLL","handleAddPoll","dispatch","getState","authedUser","then","poll","user","pollId","type","payload","addPoll","savePolls","saveUsers","handleAnswerPoll","option","answerPoll","polls","post","combineReducers","state","action","concat","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","formUsers","text","value","image","src","connect","useState","setUser","setAvatar","submitFailed","setSubmitFailed","history","useHistory","className","Select","placeholder","options","onChange","e","target","selectName","children","innerText","selectAvatar","currentSrc","Message","error","content","Button","onClick","setAuthedUser","push","Login","to","activeClassName","includes","Object","fromEntries","entries","filter","unansweredPolls","answeredPollIds","keys","unansweredPollIds","activeCategory","setActiveCategory","handleClick","toLowerCase","Group","map","ErrorMessage","setFirstQuestion","setSecondQuestion","Form","onSubmit","Field","length","sortedUsers","sort","b","sortedUserIds","setOption","handleChange","textContent","Progress","progress","percent","success","size","preventDefault","Radio","label","checked","props","match","params","pollIds","p","handleInitialData","all","receiveUsers","receivePolls","useEffect","path","exact","component","Home","NewPoll","Leaderboard","PollPage","createStore","reducer","composeWithDevTools","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5658978.chunk.js","sourcesContent":["export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\nexport const REMOVE_AUTHED_USER = 'REMOVE_AUTHED_USER'\r\n\r\nexport function setAuthedUser(id, avatar) {\r\n  return {\r\n    type: SET_AUTHED_USER,\r\n    payload: {\r\n      id,\r\n      avatar\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeAuthedUser() {\r\n  return {\r\n    type: REMOVE_AUTHED_USER\r\n  }\r\n}","import { generateId } from '../utils/helpers'\r\nimport axios from 'axios'\r\n\r\nexport let users = {\r\n  'Mike': {\r\n    id: 'Mike',\r\n    avatar: 'https://randomuser.me/api/portraits/men/49.jpg',\r\n    createdPolls: ['98c1e68-3320-4157-18w7-84c2d1e7zxf1v'],\r\n    answeredPolls: [],\r\n    points: 1\r\n  },\r\n  'Carol': {\r\n    id: 'Carol',\r\n    avatar: 'https://randomuser.me/api/portraits/women/2.jpg',\r\n    createdPolls: [],\r\n    answeredPolls: [],\r\n    points: 0\r\n  },\r\n  'Jennifer': {\r\n    id: 'Jennifer',\r\n    avatar: 'https://randomuser.me/api/portraits/women/3.jpg',\r\n    createdPolls: [],\r\n    answeredPolls: ['17w1v628-192q-1537-12x4-11a131j3tb6p'],\r\n    points: 1\r\n  },\r\n  'Victor': {\r\n    id: 'Victor',\r\n    avatar: 'https://randomuser.me/api/portraits/men/16.jpg',\r\n    createdPolls: [],\r\n    answeredPolls: [],\r\n    points: 0\r\n  }\r\n}\r\n\r\n\r\nfunction formatPoll ({ firstQuestion, secondQuestion, author }) {\r\n  return {\r\n    author,\r\n    id: generateId(),\r\n    firstQuestion,\r\n    secondQuestion,\r\n    answeredBy: [],\r\n    firstQuestionReplies: 0,\r\n    secondQuestionReplies: 0,\r\n    totalReplies: 0\r\n  }\r\n}\r\n\r\nexport async function _savePoll ({ firstQuestion, secondQuestion, author }) {\r\n  return new Promise((res, rej) => {\r\n    const formattedPoll = formatPoll({\r\n      author,\r\n      firstQuestion,\r\n      secondQuestion\r\n    })\r\n    res(formattedPoll)\r\n  })\r\n}\r\n\r\nexport const _getUsers = async () => {\r\n  try {\r\n    const res = await axios.get('http://localhost:5000/api/users')\r\n    return res.data\r\n  }\r\n  catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nexport const _getPolls = async () => {\r\n  try {\r\n    const res = await axios.get('http://localhost:5000/api/polls')\r\n    return res.data\r\n  }\r\n  catch(err) {\r\n    console.log(err)\r\n  }\r\n}","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport function generateId() {\r\n  return uuidv4()\r\n}","import {\r\n  _getUsers,\r\n  _getPolls,\r\n  _savePoll,\r\n} from './_DATA.js'\r\n\r\nexport function getInitialData () {\r\n  return Promise.all([\r\n    _getUsers(),\r\n    _getPolls(),\r\n  ]).then(([users, polls]) => ({\r\n    users,\r\n    polls,\r\n  }))\r\n}\r\n\r\n\r\nexport function savePoll (info) {\r\n  return _savePoll(info)\r\n}","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\nexport const ADD_NEW_POLL_TO_USER = 'ADD_NEW_POLL_TO_USER'\r\nexport const ADD_ANSWERED_POLL_TO_USER = 'ADD_ANSWERED_POLL_TO_USER'\r\n\r\nexport function receiveUsers(users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    payload: {\r\n      users\r\n    }  \r\n  }\r\n}\r\n\r\nexport function addNewPollToUser(user, pollId) {\r\n  return {\r\n    type: ADD_NEW_POLL_TO_USER,\r\n    payload: {\r\n      user,\r\n      pollId\r\n    }  \r\n  }\r\n}\r\n\r\nexport function addAnsweredPollToUser(user, pollId) {\r\n  return {\r\n    type: ADD_ANSWERED_POLL_TO_USER,\r\n    payload: {\r\n      user,\r\n      pollId\r\n    }  \r\n  }\r\n}","\r\nimport { savePoll } from '../utils/api'\r\nimport { addNewPollToUser, addAnsweredPollToUser } from '../actions/users'\r\nimport axios from 'axios'\r\n\r\nexport const RECEIVE_POLLS = 'RECEIVE_POLLS'\r\nexport const ADD_POLL = 'ADD_POLL'\r\nexport const ANSWER_POLL = 'ANSWER_POLL'\r\nexport const SAVE_POLLS = 'SAVE_POLLS'\r\nexport const SAVE_USERS = 'SAVE_USERS'\r\n\r\nexport function receivePolls(polls) {\r\n  return {\r\n    type: RECEIVE_POLLS,\r\n    payload: {\r\n      polls\r\n    }\r\n  }\r\n}\r\n\r\nfunction addPoll(poll) {\r\n  return {\r\n    type:  ADD_POLL,\r\n    payload: {\r\n      poll\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction answerPoll(id, user, option) {\r\n  return {\r\n    type: ANSWER_POLL,\r\n    payload: {\r\n      id,\r\n      user,\r\n      option\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function handleAddPoll(firstQuestion, secondQuestion) {\r\n  return (dispatch, getState) => {\r\n    const { authedUser } = getState()\r\n\r\n    return savePoll({\r\n      author: authedUser,\r\n      firstQuestion,\r\n      secondQuestion\r\n    })\r\n    .then((poll) => {\r\n      dispatch(addPoll(poll))\r\n      dispatch(addNewPollToUser(poll.author, poll.id))\r\n      dispatch(savePolls())\r\n      dispatch(saveUsers())\r\n    })\r\n  }\r\n}\r\n\r\nexport function handleAnswerPoll(id, option) {\r\n  return (dispatch, getState) => {\r\n    const { authedUser } = getState()\r\n\r\n    dispatch(answerPoll(id, authedUser, option))\r\n    dispatch(addAnsweredPollToUser(authedUser, id))\r\n    dispatch(savePolls())\r\n    dispatch(saveUsers())\r\n  }\r\n}\r\n\r\nconst savePolls = () => async (dispatch, getState) => {\r\n  const polls = getState().polls\r\n\r\n   return await axios.post('http://localhost:5000/api/polls', polls)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SAVE_POLLS,\r\n        payload: {\r\n          polls: res.data\r\n        }\r\n      })\r\n    })\r\n}\r\n\r\nconst saveUsers = () => async (dispatch, getState) => {\r\n  const users = getState().users\r\n\r\n   return await axios.post('http://localhost:5000/api/users', users)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SAVE_USERS,\r\n        payload: {\r\n          users: res.data\r\n        }\r\n      })\r\n    })\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport authedUser from './authedUser'\r\nimport polls from './polls'\r\nimport users from './users'\r\n\r\nexport default combineReducers({\r\n  authedUser,\r\n  users,\r\n  polls\r\n})","import { SET_AUTHED_USER, REMOVE_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default function authedUser (state = null, action) {\r\n  switch(action.type) {\r\n    case SET_AUTHED_USER :\r\n      return {\r\n        id: action.payload.id,\r\n        avatar: action.payload.avatar\r\n      }\r\n      \r\n    case REMOVE_AUTHED_USER :\r\n      return null\r\n\r\n    default :\r\n      return state\r\n      \r\n  }\r\n}","import { RECEIVE_USERS, ADD_NEW_POLL_TO_USER, ADD_ANSWERED_POLL_TO_USER } from '../actions/users'\r\n\r\nexport default  function users (state = {}, action) {\r\n  switch(action.type) {\r\n    case RECEIVE_USERS :\r\n      return {\r\n        ...state,\r\n        ...action.payload.users\r\n      }\r\n      case ADD_NEW_POLL_TO_USER :\r\n      return {\r\n        ...state,\r\n        [action.payload.user.id]: {\r\n          ...state[action.payload.user.id],\r\n          createdPolls: state[action.payload.user.id].createdPolls.concat(action.payload.pollId),\r\n          points: state[action.payload.user.id].points + 1\r\n        }\r\n      }\r\n      case ADD_ANSWERED_POLL_TO_USER :\r\n      return {\r\n        ...state,\r\n        [action.payload.user.id]: {\r\n          ...state[action.payload.user.id],\r\n          answeredPolls: state[action.payload.user.id].answeredPolls.concat(action.payload.pollId),\r\n          points: state[action.payload.user.id].points + 1\r\n        }\r\n      }\r\n    default :\r\n      return state\r\n  }\r\n}","import { ADD_POLL, RECEIVE_POLLS, ANSWER_POLL } from '../actions/polls'\r\n\r\nexport default function polls (state = {}, action) {\r\n  switch(action.type) {\r\n    case RECEIVE_POLLS :\r\n      return {\r\n        ...state,\r\n        ...action.payload.polls\r\n      }\r\n    case ADD_POLL :\r\n      return {\r\n        ...state,\r\n        [action.payload.poll.id]: action.payload.poll\r\n      }\r\n    case ANSWER_POLL :\r\n      if(action.payload.option === state[action.payload.id].firstQuestion) {\r\n        return {     \r\n          ...state,\r\n          [action.payload.id]: {\r\n            ...state[action.payload.id],\r\n            answeredBy: state[action.payload.id].answeredBy.concat(action.payload.user.id) ,\r\n            firstQuestionReplies: state[action.payload.id].firstQuestionReplies + 1,\r\n            totalReplies: state[action.payload.id].totalReplies + 1\r\n          }\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [action.payload.id]: {\r\n            ...state[action.payload.id],\r\n            answeredBy: state[action.payload.id].answeredBy.concat(action.payload.user.id),  \r\n            secondQuestionReplies: state[action.payload.id].secondQuestionReplies + 1,\r\n            totalReplies: state[action.payload.id].totalReplies + 1 \r\n          }\r\n        }\r\n      }\r\n      \r\n    default :\r\n      return state\r\n  }\r\n}\r\n\r\n","const logger = (store) => (next) => (action) => {\r\n  console.group(action.type)\r\n    console.log('The action: ', action)\r\n    const returnValue = next(action)\r\n    console.log('The new state: ', store.getState())\r\n  console.groupEnd()\r\n  return returnValue\r\n}\r\n\r\nexport default logger","import thunk from 'redux-thunk'\r\nimport logger from './logger'\r\nimport { applyMiddleware } from 'redux'\r\n\r\nexport default applyMiddleware(\r\n  thunk,\r\n  logger\r\n)","import React, { useState } from 'react'\r\nimport { Select, Button, Message } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setAuthedUser } from '../actions/authedUser'\r\nimport { users } from '../utils/_DATA'\r\n\r\nconst formUsers = [\r\n  {\r\n    text: users['Mike'].id,\r\n    value: users['Mike'].id,\r\n    image: {\r\n      avatar: true,\r\n      src: users['Mike'].avatar\r\n    }\r\n  },\r\n  {\r\n    text: users['Carol'].id,\r\n    value: users['Carol'].id,\r\n    image: {\r\n      avatar: true,\r\n      src: users['Carol'].avatar\r\n    }\r\n  },\r\n  {\r\n    text: users['Jennifer'].id,\r\n    value: users['Jennifer'].id,\r\n    image: {\r\n      avatar: true,\r\n      src: users['Jennifer'].avatar\r\n    }\r\n  },\r\n  {\r\n    text: users['Victor'].id,\r\n    value: users['Victor'].id,\r\n    image: {\r\n      avatar: true,\r\n      src: users['Victor'].avatar\r\n    }\r\n  }\r\n]\r\n\r\nconst LoginForm = ({ dispatch }) => {\r\n  const [user, setUser] = useState('')\r\n  const [avatar, setAvatar] = useState('')\r\n  const [submitFailed, setSubmitFailed] = useState(false)\r\n\r\n  let history = useHistory();\r\n\r\n  const handleChange = (e) => { \r\n    const target = e.target\r\n\r\n    // Get name and avatar from select element\r\n    const selectName = target.children[1].innerText\r\n    const selectAvatar = target.children[0].currentSrc\r\n\r\n    setUser(selectName)\r\n    setAvatar(selectAvatar)\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n\r\n    // Validate a user has been selected\r\n    if (user !== '') {\r\n\r\n      // If submit failed previously, change to false\r\n      if (submitFailed === true) {\r\n        setSubmitFailed(false)\r\n      }\r\n\r\n      dispatch(setAuthedUser(user, avatar))\r\n\r\n      history.push('/home')\r\n\r\n    } else {\r\n      setSubmitFailed(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='login-form align-center shadow-slim'>\r\n      <div className=\"login-form__container\">\r\n        <h3>Welcome to \"Would you Rather\"!</h3>\r\n        <p>Select a user to start using the app</p>\r\n        <Select className='login-form__select' placeholder='Select user' options={formUsers} onChange={handleChange}/>\r\n        {submitFailed === true ?\r\n          <Message\r\n          error\r\n          content='Please select a user before proceeding'\r\n        /> :\r\n        null\r\n        }\r\n        <Button className='login-form__btn' onClick={handleClick}>Sign Up</Button>\r\n      </div>\r\n    </div>    \r\n  )\r\n}\r\n\r\nfunction mapStateToProps ({ authedUser }) {\r\n  return {\r\n    authedUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginForm)\r\n","import React from 'react'\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nconst Login = () => {\r\n  return (\r\n    <>\r\n      <LoginForm />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Menu, Button, Container, Immage } from 'semantic-ui-react'\r\n\r\nimport { removeAuthedUser } from '../actions/authedUser'\r\n\r\nconst Nav = ({ authedUser, dispatch }) => {\r\n  let history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(removeAuthedUser())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <nav className='navbar'>\r\n      <div className='navbar__container main-container'>\r\n        <div className='navbar__left'>\r\n          <ul className='navbar__left-list'>\r\n            <li className='navbar__left-list__item active'><NavLink to='/home' activeClassName='active'>Home</NavLink>\r\n            </li>\r\n            <li className='navbar__left-list__item active'><NavLink to='/add'  activeClassName='active'>Create Poll</NavLink>\r\n            </li>\r\n            <li className='navbar__left-list__item active'><NavLink to='/leaderboard'  activeClassName='active'>Leaderboard</NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='navbar__right'>\r\n        <ul className='navbar__right-list'>\r\n          <li className='navbar__right-list__item'>\r\n            <img src={authedUser.avatar} className='navbar__right-list__item-img'/>\r\n            <span className='navbar__right-list__item-name'>{authedUser.id}</span>\r\n          </li>\r\n          <li className='navbar__right-list__item'><Button\r\n          onClick={handleLogout}>Logout</Button>\r\n          </li>\r\n        </ul>\r\n        </div>\r\n        \r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n  return {\r\n    authedUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Nav)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nconst Poll = ({ authedUser, poll }) => {\r\n  let history = useHistory();\r\n\r\n  const { author, firstQuestion, secondQuestion, id, answeredBy} = poll\r\n\r\n  const handleClick = () => {\r\n    history.push(`questions/${id}`)\r\n  }\r\n \r\n  return (\r\n    <div className='poll'>\r\n      <div className='poll__head'>\r\n        <div className='poll__head-left'>\r\n          <img src={author.avatar} className='poll__head-left__img shadow-xs'/>\r\n        </div>\r\n        <div className='poll__head-right'>\r\n          <span className='poll__head-right__name'>{author.id}</span>\r\n        </div>\r\n      </div>\r\n      <div className='poll__body'>\r\n        <p className='poll__body-title'>Would you rather...</p>\r\n        <p className='poll__body-questions'>{firstQuestion}<br/>or... <br/>{secondQuestion}\r\n        </p>    \r\n        {/* Show the correct button depending on whether the user has replied to this poll or not */}\r\n        <Button onClick={handleClick} className='poll__body-btn'>{!answeredBy.includes(authedUser.id) ? 'Answer Poll' : 'See Results'}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, polls }, { id }) {\r\n  const poll = polls[id]\r\n\r\n  return {\r\n    authedUser,\r\n    poll: poll,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Poll)\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'semantic-ui-react'\r\nimport Poll from './Poll'\r\n\r\nconst HomePanel = ({  unansweredPollIds, answeredPollIds  }) => {  \r\n  const [activeCategory, setActiveCategory] = useState('unanswered')\r\n\r\n  const handleClick = (e) => {\r\n\r\n  setActiveCategory(e.target.innerText.toLowerCase())\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='home-panel main-container'>\r\n      <Button.Group className='home-panel__btn-group'>\r\n        <Button onClick={handleClick}className={`home-panel__btn-group__btn ${activeCategory === 'unanswered' ? 'positive' : ''}`}>Unanswered</Button>\r\n        <Button onClick={handleClick} className={`home-panel__btn-group__btn ${activeCategory === 'answered' ? 'positive' : ''}`}>Answered</Button>\r\n      </Button.Group>\r\n      <div className='home-panel__list'>\r\n        {\r\n          // Render polls depending on whether they've been answered or not by the user and pass their ids\r\n          activeCategory === 'unanswered' ? unansweredPollIds.map((id) => {\r\n            return <Poll key={id} id={id}/>\r\n          }) :   \r\n          answeredPollIds.map((id) => {\r\n            return <Poll key={id} id={id}/>\r\n          })      \r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps ({ authedUser, polls }) {\r\n  // Filter polls by answered and unanswered by the authed user\r\n  const answeredPolls = Object.fromEntries(Object.entries(polls).filter(([key, value]) => value.answeredBy.includes(authedUser.id)))\r\n\r\n  const unansweredPolls = Object.fromEntries(Object.entries(polls).filter(([key, value]) => !value.answeredBy.includes(authedUser.id)))\r\n\r\n\r\n  return {\r\n    authedUser,\r\n    // Extract the ids of both types of polls to map over in the UI\r\n    answeredPollIds: Object.keys(answeredPolls),\r\n    unansweredPollIds: Object.keys(unansweredPolls)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomePanel)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <div className='error-message'>\r\n      <p>You don't have permission to see this. Please log in before proceeding.</p>\r\n      <Link to='/'>Log in</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Nav from '../components/Nav'\r\nimport HomePanel from '../components/HomePanel'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\n\r\nconst Home = ({ authedUser }) => {\r\n \r\n  return (\r\n    <>\r\n      {authedUser !== null ?\r\n      <>\r\n        <Nav />\r\n        <HomePanel />\r\n      </>  \r\n      : \r\n      <ErrorMessage/>\r\n      }  \r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n  return {\r\n    authedUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)","import React, { useState } from 'react'\r\nimport { Form, Checkbox, Button } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { handleAddPoll } from '../actions/polls'\r\n\r\n\r\nconst PollForm = ({ dispatch, authedUser }) => {\r\n  const [firstQuestion, setFirstQuestion] = useState('')\r\n  const [secondQuestion, setSecondQuestion] = useState('')\r\n\r\n  let history = useHistory();\r\n\r\n  const handleInputOne = (e) => {\r\n    setFirstQuestion(e.target.value)\r\n  }\r\n\r\n  const handleInputTwo = (e) => {\r\n    setSecondQuestion(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(handleAddPoll(firstQuestion, secondQuestion))\r\n    history.push('/home')\r\n  }\r\n\r\n  return (\r\n    <div className='poll-form shadow-slim'>\r\n      <Form className='poll-form__form' onSubmit={handleSubmit}>\r\n        <span className='poll-form__form-span'>Would you rather...</span>\r\n        <Form.Field>\r\n          <input placeholder='First question...' onChange={handleInputOne}/>\r\n        </Form.Field>\r\n        <span className='poll-form__form-or'>Or...</span>\r\n        <Form.Field>  \r\n          <input placeholder='Second question...' onChange={handleInputTwo}/>\r\n        </Form.Field>\r\n        <Button type='submit' className='poll-form__form-btn' >Create New Poll</Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n  return {\r\n    authedUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollForm)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Nav from '../components/Nav'\r\nimport PollForm from '../components/PollForm'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\n\r\nconst NewPoll = ({ authedUser }) => {\r\n  return (\r\n    <>\r\n      {authedUser !== null ?\r\n      <>\r\n        <Nav/>\r\n        <p className='new-poll__title main-container align-center'>Create New Poll</p>\r\n        <PollForm/>\r\n      </>  \r\n      : \r\n        <ErrorMessage/>\r\n      }  \r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n  return {\r\n    authedUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NewPoll)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst LeadCard = ({user}) => {\r\n\r\n  const { id, avatar, createdPolls, answeredPolls, points } = user\r\n\r\n  return (\r\n    <div className='lead-card shadow-slim'>\r\n      <div className='lead-card__left'>\r\n        <img src={avatar} className='lead-card__left-img'/>\r\n        <p className='lead-card__left-name'>{id}</p>\r\n      </div>\r\n      <div className='lead-card__center'>\r\n  <p className='lead-card__center-questions lead-card__center-questions--answered'>Polls answered: {answeredPolls.length}</p>\r\n        <p className='lead-card__center-questions lead-card__center-questions--created'>Polls created: {createdPolls.length}</p>\r\n      </div>\r\n      <div className='lead-card__right'>\r\n        <p className='lead-card__right-score'>{points} points</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps({ users }, {id}) {\r\n  // Get the user\r\n  const user = users[id] \r\n  \r\n  return {\r\n    user: user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeadCard)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Nav from '../components/Nav'\r\nimport LeadCard from '../components/LeadCard'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\n\r\nconst Leaderboard = ({ authedUser, sortedUserIds}) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      {authedUser !== null ?\r\n      <>\r\n        <Nav/>\r\n        <div className='leader-board'>\r\n        <h3 className='leader-board__title'>Leaderboard</h3>\r\n        <div className='leader-board__list'>\r\n          {sortedUserIds.map((id) => {\r\n            return <LeadCard key={id} id={id}/>\r\n          })}\r\n        </div>\r\n        </div>\r\n      </>  \r\n      : \r\n        <ErrorMessage/>\r\n      }  \r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps ({ authedUser, users }) {\r\n  // Sort users by their total points and get their name ids\r\n  const sortedUsers = Object.fromEntries(Object.entries(users).sort((a, b) => b[1].points - a[1].points))\r\n  const sortedUserIds = Object.keys(sortedUsers)\r\n\r\n\r\n  return {\r\n    authedUser,\r\n    sortedUserIds: sortedUserIds\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard)\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, Progress } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { handleAnswerPoll } from '../actions/polls'\r\n\r\n\r\nconst PollAnswer = ({ poll, authedUser, dispatch }) => {\r\n  const [option, setOption] = useState('')\r\n\r\n  const { author, firstQuestion, secondQuestion, id, answeredBy, firstQuestionReplies, secondQuestionReplies, totalReplies} = poll\r\n\r\n  const handleChange = e => {\r\n    setOption(e.target.textContent)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    dispatch(handleAnswerPoll(id, option))\r\n  }\r\n\r\n  return (\r\n    <div className='poll-answer'>\r\n      <div className='poll-answer__head'>\r\n        <div className='poll-answer__head-left'>\r\n          <img src={author.avatar} className='poll-answer__head-left__img shadow-xs'/>\r\n        </div>\r\n        <div className='poll-answer__head-right'>\r\n          <span className='poll-answer__head-right__name'>{author.id}</span>\r\n        </div>\r\n      </div>\r\n      <div className='poll-answer__body'>\r\n      <p className='poll-answer__body-title'>Would you rather...</p>\r\n      {\r\n      // Show the form if the poll hasn't been answered and the results if it has\r\n      !answeredBy.includes(authedUser.id) ? \r\n        <Form onSubmit={handleSubmit}className='poll-answer__body-form'>\r\n        <Form.Group>\r\n          <Form.Radio      \r\n            className='poll-answer__body-form__option'\r\n            label={firstQuestion}\r\n            value={firstQuestion}\r\n            checked={option === firstQuestion}\r\n            onChange={handleChange}\r\n          />  \r\n          <Form.Radio\r\n            className='poll-answer__body-form__option'\r\n            label={secondQuestion}\r\n            value={secondQuestion}\r\n            checked={option === secondQuestion}\r\n            onChange={handleChange}\r\n          />         \r\n        </Form.Group>\r\n        <Form.Button className='poll-answer__body-btn'>Submit</Form.Button>\r\n        </Form>\r\n        :\r\n        <div>\r\n          <p>{firstQuestion}</p>\r\n          <Progress\r\n            progress='percent'\r\n            percent={(firstQuestionReplies / totalReplies ) * 100}\r\n            success={option === firstQuestion ? true : false}\r\n            size='large'\r\n          />\r\n          <p className='poll-answer__body-result'>{firstQuestionReplies} out of {totalReplies} votes</p>\r\n          <p>{secondQuestion}</p>\r\n          <Progress\r\n          progress='percent'\r\n          percent={(secondQuestionReplies / totalReplies ) * 100}\r\n          success={option === secondQuestion ? true : false}\r\n          size='large'\r\n          />\r\n          <p className='poll-answer__body-result'>{secondQuestionReplies} out of {totalReplies} votes</p>\r\n          \r\n          <Link to='/home'><Button>Back</Button></Link>\r\n        </div> \r\n      }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, polls }, { id }) {\r\n  // Get the poll\r\n  const poll = polls[id]\r\n\r\n  return {\r\n    authedUser,\r\n    poll: poll\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollAnswer)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Nav from '../components/Nav'\r\nimport PollAnswer from '../components/PollAnswer' \r\nimport ErrorMessage from '../components/ErrorMessage'\r\n\r\nconst PollPage = ({ id, polls, pollIds, authedUser }) => {\r\n  return (\r\n    <>\r\n      {authedUser !== null ?\r\n      <>\r\n        <Nav />\r\n        <div className='answer-poll-panel main-container'>\r\n        {pollIds.filter(pollId => pollId === id).map((p) => {\r\n            return <PollAnswer key={p} id={p}/>\r\n          })}\r\n        </div>\r\n      </>  \r\n      : \r\n        <ErrorMessage/>\r\n      }  \r\n    </>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, polls }, props) {\r\n  const { id } = props.match.params\r\n\r\n  return {\r\n    id,\r\n    authedUser,\r\n    polls,\r\n    pollIds: Object.keys(polls)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollPage)\r\n","import { getInitialData } from '../utils/api'\r\nimport { receivePolls } from './polls'\r\nimport { receiveUsers } from './users'\r\nimport { setAuthedUser } from './authedUser'\r\n\r\nconst AUTHED_ID = 'Carol'\r\nconst AUTHED_AVATAR = 'https://randomuser.me/api/portraits/women/2.jpg'\r\n\r\nexport function handleInitialData() {\r\n  return (dispatch) => {\r\n    return getInitialData()\r\n    .then(({ users, polls }) => {\r\n    // Default user log in for development purposes \r\n    // dispatch(setAuthedUser(AUTHED_ID, AUTHED_AVATAR))\r\n    dispatch(receiveUsers(users))\r\n    dispatch(receivePolls(polls))\r\n    \r\n  })\r\n  }\r\n}","import React, { useEffect } from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Login from '../screens/Login'\nimport Home from '../screens/Home'\nimport NewPoll from '../screens/NewPoll'\nimport Leaderboard from '../screens/Leaderboard'\nimport PollPage from '../screens/PollPage'\nimport { setAuthedUser } from '../actions/authedUser'\nimport { handleInitialData } from '../actions/shared'\n\nconst App = ({ authedUser, dispatch }) => {\n  // Load initial data\n  useEffect(() => {\n    dispatch(handleInitialData())\n  }, [])\n  \n  return (\n    <div className='App'>\n      <Route path='/' exact component={Login}/>\n      <Route path='/home' component={Home}/>\n      <Route path='/add' component={NewPoll}/>\n      <Route path='/leaderboard' component={Leaderboard}/>\n      <Route path='/questions/:id' component={PollPage} />\n    </div> \n  )\n}\n\nfunction mapStateToProps ({ authedUser }) {\n  return {\n    authedUser\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\nimport 'semantic-ui-css/semantic.min.css'\nimport './main.scss';\nimport App from './components/App';\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst store = createStore(reducer, composeWithDevTools(middleware))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n     <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}